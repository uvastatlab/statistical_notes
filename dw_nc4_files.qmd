---
title: "Data wrangling nc4 files"
author: "Clay Ford"
date: "2023-09-18"
format:
  html:
    embed-resources: true
---

## Read in nc4 data

```{r}
library(ncdf4) # package for netcdf manipulation
nc_data <- nc_open('R01_JULES_1901.nc4') # Open a netCDF File (nc4)
```

The nc_data objects is a list with 15 components, some of which contain more lists. The `ncvar_get()` function extracts data of interest from the nc_data object. Below we extract longitude, latitude, time and soil moisture fraction.


```{r}
lon <- ncvar_get(nc_data, "lon")
lat <- ncvar_get(nc_data, "lat")
time <- ncvar_get(nc_data, "time")
frac <- ncvar_get(nc_data, "SoilMoistFrac")
```

The first three are vectors. The last, frac, is a large 4-dimensional array. 

```{r}
dim(frac)
```

The contents of this array are soil moisture fraction values from 1901 at various coordinates, various depths, and at various points in time.

- 720 (longitude coordinate)
- 123 (latitude coordinate)
- 16 (16 depths)
- 12 (12 months)

The dimension contains data about location, depth, and time. However the _dimensions are not labeled_! We need to label them.

## Label the dimensions

The dimension labels are in the lon, lat and time vectors. Oddly there was no component in the nc_data object with depth values. That may not be available for 1901 data. So I just used the numbers 1 - 16.

```{r}
dimnames(frac) <- list("lon" = lon, "lat" = lat, 
                       "depth" = 1:16, "month" = time)
```

## Convert to data frame

They only wanted data for a subset of the latitude and longitude coordinates, so I extracted the relevant row and column numbers.

```{r}
i <- which(lon <=-128.0 & lon >= -162.0)
j <- which(lat <=69.5 & lat >=59.0)
```

Now we can use the `as.data.table()` function from the {data.table} package to convert the array to a data frame. We can also use the base R `as.data.frame.table()` function for this, but the {data.table} version automatically drops all NAs. Notice I used the `i` and `j` vectors to subset the array on-the-fly.

```{r}
library(data.table)
fracDF <- as.data.table(frac[i,j,,], value.name = "SoilMoistFrac")
head(fracDF)
```

Next we need to convert the first three columns to numeric:

```{r}
fracDF[,1:3] <- lapply(fracDF[,1:3], as.numeric)
```

Then we format the time column as a date and add the year. The origin date for this data is "1700-01-01", not the usual "1970-01-01" that base R defaults to.

```{r}
fracDF$month <- as.Date(as.numeric(fracDF$month), 
                       origin = "1700-01-01")
fracDF$year <- substr(fracDF$month[1], 1, 4)
head(fracDF)
```

